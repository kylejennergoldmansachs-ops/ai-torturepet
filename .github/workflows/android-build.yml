name: Android CI - Build Debug APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      # location where we'll install Android SDK (use workspace to avoid runner context issues)
      ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
      # ensure gradle uses reasonable heap on CI
      GRADLE_OPTS: -Dorg.gradle.jvmargs="-Xmx1536m"

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: temurin

      - name: Install system deps (wget, unzip)
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends unzip wget

      - name: Download Android commandline tools
        run: |
          mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools"
          cd "${ANDROID_SDK_ROOT}/cmdline-tools"
          # Download a stable command-line tools package for Linux
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O cmdline-tools.zip
          unzip -q cmdline-tools.zip
          # Move into 'latest' directory expected by sdkmanager path style
          mkdir -p "${ANDROID_SDK_ROOT}/cmdline-tools/latest"
          # contents extracted into a "cmdline-tools" folder; move them
          mv cmdline-tools/* "${ANDROID_SDK_ROOT}/cmdline-tools/latest/" || true
          rm -f cmdline-tools.zip

      - name: Add sdkmanager to PATH
        run: |
          echo "${ANDROID_SDK_ROOT}/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "${ANDROID_SDK_ROOT}/platform-tools" >> $GITHUB_PATH

      - name: Install Android SDK packages (platform-tools, platform, build-tools, ndk)
        env:
          ANDROID_SDK_ROOT: ${{ env.ANDROID_SDK_ROOT }}
        run: |
          # Ensure sdkmanager is available
          sdkmanager --version
          # Accept licenses non-interactively
          yes | sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" --licenses || true
          # Install required packages. Adjust versions if you need different ones.
          sdkmanager --sdk_root="${ANDROID_SDK_ROOT}" "platform-tools" "platforms;android-31" "build-tools;33.0.2" "ndk;21.4.7075529"
          ls -la "${ANDROID_SDK_ROOT}"

      - name: Grant execute to Gradlew (module wrapper)
        # Ensure the Gradle wrapper in the android-app module is executable.
        run: chmod +x ./android-app/gradlew

      - name: Build debug APK
        working-directory: android-app
        run: |
          ./gradlew :app:assembleDebug --no-daemon --stacktrace

      - name: Upload debug APK
        uses: actions/upload-artifact@v4
        with:
          name: app-debug-apk
          path: android-app/app/build/outputs/apk/debug/app-debug.apk
